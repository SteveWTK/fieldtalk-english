try{!function(){var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},t=(new e.Error).stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="79ed9fe4-3beb-44f1-89b3-24c6ca1c4d28",e._sentryDebugIdIdentifier="sentry-dbid-79ed9fe4-3beb-44f1-89b3-24c6ca1c4d28")}()}catch(e){}"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1041],{37578:(e,t,s)=>{s.d(t,{$f:()=>q,Fx:()=>P,JC:()=>R,Kz:()=>O,Nd:()=>f,PJ:()=>x,RT:()=>h,eu:()=>w,l8:()=>_,mu:()=>T,n4:()=>A,oZ:()=>E,qr:()=>v,re:()=>N,tS:()=>I});var n=s(14360),r=s(53434),a=s.n(r),o=s(26089),i=s.n(o),l=s(86727),c=s.n(l),u=s(53239),d=s(46491),m=s(90259),p=s(93929),g=s(56390);let h=e=>a().unix(Number(e)/1e3/1e3).toISOString(),_=e=>{let t=16===String(e).length;return!Number.isNaN(Number(e))&&t},f=e=>e&&e.timestamp&&e.event_message&&e.id,b=(e,t)=>Object.keys(e).filter(t=>e[t]).flatMap(s=>{let n=t?"".concat(t,".").concat(s):s;return"object"==typeof e[s]?b(e[s],n):[n]}),y=(e,t)=>{let s=Object.keys(t),n=g.aP[e],r=e=>{let s=n[e],r=i()(t,e);if(void 0!==r&&"function"==typeof s)return s(r);if(void 0===s)if("string"==typeof r)return"".concat(e," = '").concat(r,"'");else return"".concat(e," = ").concat(r);return void 0===r&&"function"==typeof s?null:s&&!1===r?null:s},a=s.map(e=>{if(void 0===t[e]||"string"==typeof t[e]&&0===t[e].length)return null;if("object"==typeof t[e]){let s=b(t[e],e).map(r).filter(Boolean);return s.length>0?"(".concat(s.join(" or "),")"):null}{let t=r(e);return null===t?null:"(".concat(t,")")}}).filter(Boolean).join(" and ");return a?"where "+a:""},v=function(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100,n=y(e,t),r=S(e),a="order by timestamp desc";switch(e){case"edge_logs":if(!1===d.pe)return"\n-- local dev edge_logs query\nselect id, edge_logs.timestamp, event_message, request.method, request.path, request.search, response.status_code\nfrom edge_logs\n".concat(r,"\n").concat(n,"\n").concat(a,"\nlimit ").concat(s,";\n");return"select id, identifier, timestamp, event_message, request.method, request.path, request.search, response.status_code\n  from ".concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"postgres_logs":if(!1===d.pe)return"\nselect postgres_logs.timestamp, id, event_message, parsed.error_severity, parsed.detail, parsed.hint\nfrom postgres_logs\n".concat(r,"\n").concat(n,"\n").concat(a,"\nlimit ").concat(s,"\n  ");return"select identifier, postgres_logs.timestamp, id, event_message, parsed.error_severity, parsed.detail, parsed.hint from ".concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"function_logs":return"select id, ".concat(e,".timestamp, event_message, metadata.event_type, metadata.function_id, metadata.level from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n    ");case"auth_logs":return"select id, ".concat(e,".timestamp, event_message, metadata.level, metadata.status, metadata.path, metadata.msg as msg, metadata.error from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n    ");case"function_edge_logs":return"select id, ".concat(e,".timestamp, event_message, response.status_code, request.method, m.function_id, m.execution_time_ms, m.deployment_id, m.version from ").concat(e,"\n  ").concat(r,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"supavisor_logs":return"select id, ".concat(e,".timestamp, event_message from ").concat(e," ").concat(r," ").concat(n," ").concat(a," limit ").concat(s);case"pg_upgrade_logs":return"select id, ".concat(e,".timestamp, event_message from ").concat(e," ").concat(r," ").concat(n," ").concat(a," limit 100");default:return"select id, ".concat(e,".timestamp, event_message from ").concat(e,"\n  ").concat(n,"\n  ").concat(a,"\n  limit ").concat(s,"\n  ");case"pg_cron_logs":let o="where (parsed.application_name = 'pg_cron' OR event_message LIKE '%cron job%')",i=n?"".concat(o," AND ").concat(n.substring(6)):o;return"select identifier, postgres_logs.timestamp, id, event_message, parsed.error_severity, parsed.query\nfrom postgres_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as parsed\n".concat(i,"\n").concat(a,"\nlimit ").concat(s,"\n")}},S=e=>{switch(e){case"edge_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.request) as request\n  cross join unnest(m.response) as response";case"postgres_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as parsed";case"function_logs":case"auth_logs":return"cross join unnest(metadata) as metadata";case"function_edge_logs":return"cross join unnest(metadata) as m\n  cross join unnest(m.response) as response\n  cross join unnest(m.request) as request";case"supavisor_logs":return"cross join unnest(metadata) as m";default:return""}},N=(e,t)=>"select id, timestamp, event_message, metadata from ".concat(e," where id = '").concat(t,"' limit 1"),w=(e,t)=>{let s=Math.abs(a()().diff(a()(e),"day"));return s>1&&"free"===t||s>7&&"pro"===t||s>28&&"team"===t||s>90&&"enterprise"===t},E=(e,t)=>{let s=y(e,t),n=S(e);return"SELECT count(*) as count FROM ".concat(e," ").concat(n," ").concat(s)},k=e=>{let t=e.iso_timestamp_end?a()(e.iso_timestamp_end):a()(),s=e.iso_timestamp_start?a()(e.iso_timestamp_start):a()(),n="minute",r=360,o=t.diff(s,"minute"),i=t.diff(s,"hour");return o>720?(n="hour",r=120):i>72&&(n="day",r=7),[s.add(-r,n),n]},I=(e,t,s)=>{let[n,r]=k(t),a=y(e,s),o=function(e){switch(e){case"edge_logs":case"function_edge_logs":return"response.status_code >= 500";case"postgres_logs":case"pg_cron_logs":return"parsed.error_severity IN ('ERROR', 'FATAL', 'PANIC')";case"auth_logs":return"metadata.level = 'error' OR metadata.status >= 400";case"function_logs":return"metadata.level IN ('error', 'fatal')";default:return"false"}}(e),i=function(e){switch(e){case"edge_logs":case"function_edge_logs":return"response.status_code >= 400 AND response.status_code < 500";case"postgres_logs":return"parsed.error_severity IN ('WARNING')";case"auth_logs":return"metadata.level = 'warning'";case"function_logs":return"metadata.level IN ('warning')";default:return"false"}}(e);e===g.le.PG_CRON&&(e=g.le.POSTGRES,a="where (parsed.application_name = 'pg_cron' OR event_message LIKE '%cron job%')");let l=S(e);return"\nSELECT\n-- log-event-chart\n  timestamp_trunc(t.timestamp, ".concat(r,") as timestamp,\n  count(CASE WHEN NOT (").concat(o," OR ").concat(i,") THEN 1 END) as ok_count,\n  count(CASE WHEN ").concat(o," THEN 1 END) as error_count,\n  count(CASE WHEN ").concat(i," THEN 1 END) as warning_count,\nFROM\n  ").concat(e," t\n  ").concat(l,"\n  ").concat(a?a+" and t.timestamp > '".concat(n.toISOString(),"'"):"where t.timestamp > '".concat(n.toISOString(),"'"),"\nGROUP BY\ntimestamp\nORDER BY\n  timestamp ASC\n  ")},x=()=>{let e=(0,n.useMonaco)();(0,u.useEffect)(()=>{if(e){let t=e.languages.registerCompletionItemProvider("pgsql",{triggerCharacters:["`"," ","."],provideCompletionItems:function(t,s,n){let r=new m.A(t,s.column-2,s.lineNumber-1);if(r.isNextDQuote())return{suggestions:[]};let a=[],o=p.A.schemas.filter(e=>r._text.includes(e.reference));if(0===o.length&&(o=p.A.schemas),r.isNextPeriod()){let t=o.flatMap(e=>e.fields).flatMap(e=>{let[t,...s]=e.path.split(".");return s}).map(t=>({label:t,kind:e.languages.CompletionItemKind.Property,insertText:t}));a=a.concat(t)}if("`"===n.triggerCharacter||" "===n.triggerCharacter){let t=p.A.schemas.map(t=>({label:t.reference,kind:e.languages.CompletionItemKind.Class,insertText:t.reference})),s=o.flatMap(e=>e.fields).flatMap(e=>e.path.split(".").slice(0,-1)).map(t=>({label:t,kind:e.languages.CompletionItemKind.Property,insertText:t}));a=(a=a.concat(s)).concat(t)}return{suggestions:c()(a,"label")}}});return()=>{t.dispose()}}},[e])},T=function(e,t,s,n,r,o){let i,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:20,c=arguments.length>7?arguments[7]:void 0;if(0===e.length&&!(r&&o))return[];if(e.length>l)return e.map(e=>{let s=a().utc(e[t]).toISOString();return e[t]=s,e});if(e.length<=1&&!(r||o))return e;let u=e.map(e=>a().utc(e[t])),d=o?a().utc(o):a().utc(Math.max.apply(null,u)),m=r?a().utc(r):a().utc(Math.min.apply(null,u)),p=e.length>0?u:[m,d],g=1;if(c){let e=c.match(/^(\d+)(m|h|d|s)$/);e?(g=parseInt(e[1],10),i=({s:"second",m:"minute",h:"hour",d:"day"})[e[2]]):i=H(p)}else i=H(p);let f=e.map(e=>{let s=e[t],n=_(s)?h(s):a().utc(s).toISOString();return e[t]=n,e}),b=m;for(;b.isBefore(d)||b.isSame(d);){if(!u.find(e=>e.year()===b.year()&&e.month()===b.month()&&e.date()===b.date()&&e.hour()===b.hour()&&e.minute()===b.minute())){let e=("string"==typeof s?[s]:s).reduce((e,t)=>({...e,[t]:n}),{});f.push({[t]:b.toISOString(),...e})}b=b.add(g,i)}return f},H=e=>{let t=e.reduce((e,t)=>{let s=j(t);return e[s]+=1,e},{second:0,minute:0,hour:0,day:0});return Object.keys(t).reduce((e,s)=>t[e]>t[s]?e:s)},j=e=>({0:"second",1:"minute",2:"hour",3:"day"})[["second","minute","hour"].map(t=>e.get(t)).reduce((e,t)=>(0===t&&(e+=1),e),0)];function P(e){let t=e.replace(/--.*$/gm,"").replace(/\/\*[\s\S]*?\*\//gm,"");return/\b(WITH)\b(?=(?:[^']*'[^']*')*[^']*$)/i.test(t)}function A(e){let t=e.replace(/--.*$/gm,"").replace(/\/\*[\s\S]*?\*\//gm,"");return/\b(ILIKE)\b(?=(?:[^']*'[^']*')*[^']*$)/i.test(t)}function q(e){var t,s,n,r,a,o,i,l,c;let u=null==e||null==(l=e[0])||null==(i=l.request)||null==(o=i[0])||null==(a=o.sb)||null==(r=a[0])||null==(n=r.jwt)||null==(s=n[0])||null==(t=s.apikey)?void 0:t[0];if(!u)return;if(u.invalid)return"<invalid>";let d=null==u||null==(c=u.payload)?void 0:c[0];return d&&"HS256"===d.algorithm&&"supabase"===d.issuer&&["anon","service_role"].includes(d.role)&&!d.subject?d.role:"<unrecognized>"}function O(e){var t,s,n,r,a,o,i,l;let c=null==e||null==(l=e[0])||null==(i=l.request)||null==(o=i[0])||null==(a=o.sb)||null==(r=a[0])||null==(n=r.apikey)||null==(s=n[0])||null==(t=s.apikey)?void 0:t[0];if(c)return c.error?"".concat(c.prefix,"... <invalid: ").concat(c.error,">"):"".concat(c.prefix,"...")}function R(e){var t,s,n,r,a,o,i,l,c;let u=null==e||null==(l=e[0])||null==(i=l.request)||null==(o=i[0])||null==(a=o.sb)||null==(r=a[0])||null==(n=r.jwt)||null==(s=n[0])||null==(t=s.authorization)?void 0:t[0];if(!u||u.invalid)return;let d=null==u||null==(c=u.payload)?void 0:c[0];if(d&&d.role)return d.role}},56390:(e,t,s)=>{s.d(t,{Et:()=>_,OI:()=>a,Po:()=>h,QT:()=>i,VM:()=>o,W7:()=>p,Z8:()=>g,aP:()=>c,eV:()=>d,fy:()=>m,le:()=>u,o0:()=>b,rU:()=>f});var n=s(53434),r=s.n(n);let a="https://supabase.com/docs/guides/platform/logs#querying-with-the-logs-explorer",o=2,i=[{label:"Recent Errors",mode:"simple",searchString:"[Ee]rror|\\s[45][0-9][0-9]\\s",for:["api"]},{label:"Commits",mode:"simple",searchString:"COMMIT",for:["database"]},{label:"Commits By User",description:"Count of commits made by users on the database",mode:"custom",searchString:"select\n  p.user_name,\n  count(*) as count\nfrom postgres_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.parsed) as p on true\nwhere\n  regexp_contains(event_message, 'COMMIT')\ngroup by\n  p.user_name\n  ",for:["database"]},{label:"Metadata IP",description:"List all IP addresses that used the Supabase API",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  h.x_real_ip\nfrom edge_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.request) as r on true\n  left join unnest(r.headers) as h on true\nwhere h.x_real_ip is not null\n",for:["api"]},{label:"Requests by Country",description:"List all ISO 3166-1 alpha-2 country codes that used the Supabase API",mode:"custom",searchString:"select\n  cf.country,\n  count(*) as count\nfrom edge_logs\n  left join unnest(metadata) as m on true\n  left join unnest(m.request) as r on true\n  left join unnest(r.cf) as cf on true\ngroup by\n  cf.country\norder by\n  count desc\n",for:["api"]},{label:"Slow Response Time",mode:"custom",description:"List all Supabase API requests that are slow",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message,\n  r.origin_time\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.response) as r\nwhere\n  r.origin_time > 1000\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"500 Request Codes",description:"List all Supabase API requests that responded witha 5XX status code",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message,\n  r.status_code\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.response) as r\nwhere\n  r.status_code >= 500\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"Top Paths",description:"List the most requested Supabase API paths",mode:"custom",searchString:"select\n  r.path as path,\n  r.search as params,\n  count(timestamp) as c\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) as r\ngroup by\n  path,\n  params\norder by\n  c desc\nlimit 100\n",for:["api"]},{label:"REST Requests",description:"List all PostgREST requests",mode:"custom",searchString:"select\n  cast(timestamp as datetime) as timestamp,\n  event_message\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) as r\nwhere\n  path like '%rest/v1%'\norder by\n  timestamp desc\nlimit 100\n",for:["api"]},{label:"Errors",description:"List all Postgres error messages with ERROR, FATAL, or PANIC severity",mode:"custom",searchString:"select\n  cast(t.timestamp as datetime) as timestamp,\n  p.error_severity,\n  event_message\nfrom postgres_logs as t\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as p\nwhere\n  p.error_severity in ('ERROR', 'FATAL', 'PANIC')\norder by\n  timestamp desc\nlimit 100\n",for:["database"]},{label:"Error Count by User",description:"Count of errors by users",mode:"custom",searchString:"select\n  count(t.timestamp) as count,\n  p.user_name,\n  p.error_severity\nfrom postgres_logs as t\n  cross join unnest(metadata) as m\n  cross join unnest(m.parsed) as p\nwhere\n  p.error_severity in ('ERROR', 'FATAL', 'PANIC')\ngroup by\n  p.user_name,\n  p.error_severity\norder by\n  count desc\nlimit 100\n",for:["database"]},{label:"Auth Endpoint Events",description:"Endpoint events filtered by path",mode:"custom",searchString:'select\n  t.timestamp,\n  event_message\nfrom auth_logs as t\nwhere\n  regexp_contains(event_message,"level.{3}(info|warning||error|fatal)")\n  -- and regexp_contains(event_message,"path.{3}(/token|/recover|/signup|/otp)")\nlimit 100\n',for:["database"]},{label:"Storage Object Requests",description:"Number of requests done on Storage Objects",mode:"custom",searchString:"select\n  r.method as http_verb,\n  r.path as filepath,\n  count(*) as num_requests\nfrom edge_logs\n  cross join unnest(metadata) as m\n  cross join unnest(m.request) AS r\n  cross join unnest(r.headers) AS h\nwhere\n  path like '%storage/v1/object/%'\ngroup by\n  r.path, r.method\norder by\n  num_requests desc\nlimit 100\n",for:["api"]},{label:"Storage Egress Requests",description:"Check the number of requests done on Storage Affecting Egress",mode:"custom",searchString:"select\n  request.method as http_verb,\n  request.path as filepath,\n  (responseHeaders.cf_cache_status = 'HIT') as cached,\n  count(*) as num_requests\nfrom\n  edge_logs\n  cross join unnest(metadata) as metadata\n  cross join unnest(metadata.request) as request\n  cross join unnest(metadata.response) as response\n  cross join unnest(response.headers) as responseHeaders\nwhere\n  (path like '%storage/v1/object/%' or path like '%storage/v1/render/%')\n  and request.method = 'GET'\ngroup by 1, 2, 3\norder by num_requests desc\nlimit 100;\n",for:["api"]},{label:"Storage Top Cache Misses",description:"The top Storage requests that miss caching",mode:"custom",searchString:"select\n  r.path as path,\n  r.search as search,\n  count(id) as count\nfrom edge_logs f\n  cross join unnest(f.metadata) as m\n  cross join unnest(m.request) as r\n  cross join unnest(m.response) as res\n  cross join unnest(res.headers) as h\nwhere starts_with(r.path, '/storage/v1/object')\n  and r.method = 'GET'\n  and h.cf_cache_status in ('MISS', 'NONE/UNKNOWN', 'EXPIRED', 'BYPASS', 'DYNAMIC')\ngroup by path, search\norder by count desc\nlimit 100;\n",for:["api"]}],l={search_query:e=>"regexp_contains(event_message, '".concat(e,"')")},c={postgres_logs:{...l,database:e=>"identifier = '".concat(e,"'"),"severity.error":"parsed.error_severity in ('ERROR', 'FATAL', 'PANIC')","severity.noError":"parsed.error_severity not in ('ERROR', 'FATAL', 'PANIC')","severity.log":"parsed.error_severity = 'LOG'"},edge_logs:{...l,database:e=>"identifier = '".concat(e,"'"),"status_code.error":"response.status_code between 500 and 599","status_code.success":"response.status_code between 200 and 299","status_code.warning":"response.status_code between 400 and 499","product.database":"request.path like '/rest/%' or request.path like '/graphql/%'","product.storage":"request.path like '/storage/%'","product.auth":"request.path like '/auth/%'","product.realtime":"request.path like '/realtime/%'","method.get":"request.method = 'GET'","method.post":"request.method = 'POST'","method.put":"request.method = 'PUT'","method.patch":"request.method = 'PATCH'","method.delete":"request.method = 'DELETE'","method.options":"request.method = 'OPTIONS'"},function_edge_logs:{...l,"status_code.error":"response.status_code between 500 and 599","status_code.success":"response.status_code between 200 and 299","status_code.warning":"response.status_code between 400 and 499"},function_logs:{...l,"severity.error":"metadata.level = 'error'","severity.notError":"metadata.level != 'error'","severity.log":"metadata.level = 'log'","severity.info":"metadata.level = 'info'","severity.debug":"metadata.level = 'debug'","severity.warn":"metadata.level = 'warn'"},auth_logs:{...l,"severity.error":"metadata.level = 'error' or metadata.level = 'fatal'","severity.warning":"metadata.level = 'warning'","severity.info":"metadata.level = 'info'","status_code.server_error":"cast(metadata.status as int64) between 500 and 599","status_code.client_error":"cast(metadata.status as int64) between 400 and 499","status_code.redirection":"cast(metadata.status as int64) between 300 and 399","status_code.success":"cast(metadata.status as int64) between 200 and 299","endpoints.admin":'REGEXP_CONTAINS(metadata.path, "/admin")',"endpoints.signup":'REGEXP_CONTAINS(metadata.path, "/signup|/invite|/verify")',"endpoints.authentication":'REGEXP_CONTAINS(metadata.path, "/token|/authorize|/callback|/otp|/magiclink")',"endpoints.recover":'REGEXP_CONTAINS(metadata.path, "/recover")',"endpoints.user":'REGEXP_CONTAINS(metadata.path, "/user")',"endpoints.logout":'REGEXP_CONTAINS(metadata.path, "/logout")'},realtime_logs:{...l},storage_logs:{...l},postgrest_logs:{...l,database:e=>"identifier = '".concat(e,"'")},pgbouncer_logs:{...l},supavisor_logs:{...l,database:e=>"m.project like '".concat(e,"%'")},pg_upgrade_logs:{...l},pg_cron_logs:{...l}};var u=function(e){return e.EDGE="edge_logs",e.POSTGRES="postgres_logs",e.FUNCTIONS="function_logs",e.FN_EDGE="function_edge_logs",e.AUTH="auth_logs",e.REALTIME="realtime_logs",e.STORAGE="storage_logs",e.POSTGREST="postgrest_logs",e.SUPAVISOR="supavisor_logs",e.PGBOUNCER="pgbouncer_logs",e.PG_UPGRADE="pg_upgrade_logs",e.PG_CRON="pg_cron_logs",e.ETL="etl_replication_logs",e}({});let d={api:"edge_logs",database:"postgres_logs",functions:"function_logs",fn_edge:"function_edge_logs",auth:"auth_logs",realtime:"realtime_logs",storage:"storage_logs",postgrest:"postgrest_logs",supavisor:"supavisor_logs",pg_upgrade:"pg_upgrade_logs",pg_cron:"postgres_logs",pgbouncer:"pgbouncer_logs",etl:"etl_replication_logs"},m={edge_logs:"Logs obtained from the network edge, containing all API requests",postgres_logs:"Database logs obtained directly from Postgres",function_logs:"Function logs generated from runtime execution",function_edge_logs:"Function call logs, containing the request and response",auth_logs:"Authentication logs from GoTrue",realtime_logs:"Realtime server for Postgres logical replication broadcasting",storage_logs:"Object storage logs",postgrest_logs:"RESTful API web server logs",supavisor_logs:"Shared connection pooler logs for PostgreSQL",pgbouncer_logs:"Dedicated connection pooler for PostgreSQL",pg_upgrade_logs:"Logs generated by the Postgres version upgrade process",pg_cron_logs:"Postgres logs from pg_cron cron jobs",etl_replication_logs:"Logs from the ETL replication process"},p={postgres_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:"Show all events with ERROR, PANIC, or FATAL"},{key:"noError",label:"No Error",description:"Show all non-error events"},{key:"log",label:"Log",description:"Show all events that are log severity"}]}},edge_logs:{status_code:{label:"Status",key:"status_code",options:[{key:"error",label:"Error",description:"500 error codes"},{key:"success",label:"Success",description:"200 codes"},{key:"warning",label:"Warning",description:"400 codes"}]},product:{label:"Product",key:"product",options:[{key:"database",label:"Database",description:""},{key:"auth",label:"Auth",description:""},{key:"storage",label:"Storage",description:""},{key:"realtime",label:"Realtime",description:""}]},method:{label:"Method",key:"method",options:[{key:"get",label:"GET",description:""},{key:"options",label:"OPTIONS",description:""},{key:"put",label:"PUT",description:""},{key:"post",label:"POST",description:""},{key:"patch",label:"PATCH",description:""},{key:"delete",label:"DELETE",description:""}]}},function_edge_logs:{status_code:{label:"Status",key:"status_code",options:[{key:"error",label:"Error",description:"500 error codes"},{key:"success",label:"Success",description:"200 codes"},{key:"warning",label:"Warning",description:"400 codes"}]}},function_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:'Show all events that are "error" severity'},{key:"warn",label:"Warning",description:'Show all events that are "warn" severity'},{key:"info",label:"Info",description:'Show all events that are "info" severity'},{key:"debug",label:"Debug",description:'Show all events that are "debug" severity'},{key:"log",label:"Log",description:'Show all events that are "log" severity'}]}},auth_logs:{severity:{label:"Severity",key:"severity",options:[{key:"error",label:"Error",description:"Show all events that have error or fatal severity"},{key:"warning",label:"Warning",description:"Show all events that have warning severity"},{key:"info",label:"Info",description:"Show all events that have info severity"}]},status_code:{label:"Status Code",key:"status_code",options:[{key:"server_error",label:"Server Error",description:"Show all requests with 5XX status code"},{key:"client_error",label:"Client Error",description:"Show all requests with 4XX status code"},{key:"redirection",label:"Redirection",description:"Show all requests that have 3XX status code"},{key:"success",label:"Success",description:"Show all requests that have 2XX status code"}]},endpoints:{label:"Endpoints",key:"endpoints",options:[{key:"admin",label:"Admin",description:"Show all admin requests"},{key:"signup",label:"Sign up",description:"Show all signup and authorization requests"},{key:"recover",label:"Password Recovery",description:"Show all password recovery requests"},{key:"authentication",label:"Authentication",description:"Show all authentication flow requests (login, otp, and Oauth2)"},{key:"user",label:"User",description:"Show all user data requests"},{key:"logout",label:"Logout",description:"Show all logout requests"}]}}},g=[{text:"Last 15 minutes",calcFrom:()=>r()().subtract(15,"minute").toISOString(),calcTo:()=>""},{text:"Last 30 minutes",calcFrom:()=>r()().subtract(30,"minute").toISOString(),calcTo:()=>""},{text:"Last hour",calcFrom:()=>r()().subtract(1,"hour").toISOString(),calcTo:()=>"",default:!0},{text:"Last 3 hours",calcFrom:()=>r()().subtract(3,"hour").toISOString(),calcTo:()=>""},{text:"Last 24 hours",calcFrom:()=>r()().subtract(1,"day").toISOString(),calcTo:()=>""},{text:"Last 2 days",calcFrom:()=>r()().subtract(2,"day").toISOString(),calcTo:()=>""},{text:"Last 3 days",calcFrom:()=>r()().subtract(3,"day").toISOString(),calcTo:()=>""},{text:"Last 5 days",calcFrom:()=>r()().subtract(5,"day").toISOString(),calcTo:()=>""}],h=[{text:"Last hour",calcFrom:()=>r()().subtract(1,"hour").toISOString(),calcTo:()=>"",default:!0},{text:"Last 3 hours",calcFrom:()=>r()().subtract(3,"hour").toISOString(),calcTo:()=>""},{text:"Last 24 hours",calcFrom:()=>r()().subtract(1,"day").toISOString(),calcTo:()=>""},{text:"Last 3 days",calcFrom:()=>r()().subtract(3,"day").toISOString(),calcTo:()=>""},{text:"Last 7 days",calcFrom:()=>r()().subtract(7,"day").toISOString(),calcTo:()=>""}],_=e=>e.find(e=>e.default)||e[0],f={FREE:{text:"1 day",value:1,unit:"day",promptUpgrade:!0},PRO:{text:"7 days",value:7,unit:"day",promptUpgrade:!0},PAYG:{text:"7 days",value:7,unit:"day",promptUpgrade:!0},TEAM:{text:"28 days",value:28,unit:"day",promptUpgrade:!0},ENTERPRISE:{text:"90 days",value:90,unit:"day",promptUpgrade:!1}},b=["/project/[ref]/logs/edge-logs","/project/[ref]/logs/pooler-logs","/project/[ref]/logs/postgres-logs","/project/[ref]/logs/postgrest-logs"]},90259:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(72101);class r{hasNext(){return this.lineNumber>=0||this.offset>=0}isFowardDQuote(){return!!this.hasForward()&&34===this.peekForward()}isNextDQuote(){return!!this.hasNext()&&34===this.peekNext()}isNextPeriod(){return!!this.hasNext()&&46===this.peekNext()}peekNext(){return this.offset<0?10*(this.lineNumber>0):this._line.charCodeAt(this.offset)}hasForward(){return this.lineNumber<this._lines.length||this.offset<this._line.length}peekForward(){return this.offset===this._line.length?10*(this.lineNumber!==this._lines.length):this._line.charCodeAt(this.offset+1)}next(){if(this.offset<0)return this.lineNumber>0?(this.lineNumber--,this._line=this._lines[this.lineNumber],this.offset=this._line.length-1,10):(this.lineNumber=-1,0);let e=this._line.charCodeAt(this.offset);return this.offset--,e}readArguments(){let e=0,t=0,s=0,n=0;for(;this.hasNext();){let r=this.next();switch(r){case 40:if(--e<0)return n;break;case 41:e++;break;case 123:s--;break;case 125:s++;break;case 91:t--;break;case 93:t++;break;case 34:case 39:for(;this.hasNext()&&r!==this.next(););break;case 44:!e&&!t&&!s&&n++}}return -1}readIdent(){let e=!1,t=!1,s="";for(;this.hasNext();){let n=this.peekNext();if(e&&!t&&!this._isIdentPart(n))break;if(n=this.next(),!e&&t&&34===n){e=!0;continue}if(e||32!==n&&9!==n&&10!=n){if(!e&&(34===n||this._isIdentPart(n)))e=!0,t=34===n,s=String.fromCharCode(n)+s;else if(e)if(t){if(0===n||(s=String.fromCharCode(n)+s,34===n))break}else s=String.fromCharCode(n)+s}}return s}readIdents(e){let t=[];for(;e>0;){e--;let s=this.readIdent();if(!s||(t.push(s),!this.isNextPeriod()))break}return t.reverse()}_isIdentPart(e){return 95===e||e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}constructor(e,t,s){(0,n._)(this,"_line",void 0),(0,n._)(this,"_text",void 0),(0,n._)(this,"_lines",void 0),(0,n._)(this,"model",void 0),(0,n._)(this,"offset",void 0),(0,n._)(this,"lineNumber",void 0),this.model=e,this.offset=t,this.lineNumber=s,this._text=e.getValue(),this._lines=this._text.split(/\r?\n/g),this._line=this._lines[s]}}let a=r},91041:(e,t,s)=>{s.d(t,{K:()=>c});var n=s(80263),r=s(57937),a=s(80173),o=s(53239),i=s(37578);let l=(0,s(80127).cn)("w-6 p-0 text-center text-xs text-foreground outline-none cursor-text","ring-0 focus:ring-0 ring-none border-none bg-transparent"),c=e=>{let{type:t,time:s,setTime:c,setStartTime:u,setEndTime:d,startTime:m,endTime:p,startDate:g,endDate:h}=e,[_,f]=(0,o.useState)(!1);function b(){1===s.HH.length&&(s.HH="0"+s.HH),1===s.mm.length&&(s.mm="0"+s.mm),1===s.ss.length&&(s.ss="0"+s.ss),s.HH||(s.HH="00"),s.mm||(s.mm="00"),s.ss||(s.ss="00");let e=!1,n=!1;(0,r.default)(new Date(g),"dd/mm/yyyy")==(0,r.default)(new Date(h),"dd/mm/yyyy")&&("start"===t&&(s.HH&&Number(s.HH)>Number(p.HH)&&(p.HH=s.HH,e=!0),s.HH&&Number(s.HH)>=Number(p.HH)&&s.mm&&Number(s.mm)>Number(p.mm)&&(p.mm=s.mm,e=!0),s.HH&&Number(s.HH)>=Number(p.HH)&&s.mm&&Number(s.mm)>=Number(p.mm)&&s.ss&&Number(s.ss)>Number(p.ss)&&(p.ss=s.ss,e=!0)),"end"===t&&(s.HH&&Number(s.HH)<Number(m.HH)&&(m.HH=s.HH,n=!0),s.HH&&Number(s.HH)<=Number(m.HH)&&s.mm&&Number(s.mm)<Number(m.mm)&&(m.mm=s.mm,n=!0),s.HH&&Number(s.HH)<=Number(m.HH)&&s.mm&&Number(s.mm)<=Number(m.mm)&&s.ss&&Number(s.ss)<Number(m.ss)&&(m.ss=s.ss,n=!0))),c({...s}),e&&d({...p}),n&&u({...m}),f(!1)}function y(e,t){let n={HH:s.HH,mm:s.mm,ss:s.ss};if(!(e.length>2)){switch(t){case"HH":if(e&&Number(e)>23)return;break;case"mm":case"ss":if(e&&Number(e)>59)return}n[t]=e,c({...n})}}let v=e=>{e.target.select(),f(!0),e.stopPropagation()},S=e=>{e.stopPropagation()},N=e=>{/^[0-9]$/.test(e.key)||["Backspace","Delete","ArrowLeft","ArrowRight","Tab","Enter"].includes(e.key)||e.preventDefault(),e.stopPropagation()},w=e=>{e.stopPropagation()};function E(e){e.preventDefault(),e.stopPropagation(),navigator.clipboard.readText().then(e=>{let s=null;if(isNaN((s=new Date((0,i.l8)(e)?(0,i.RT)(e):Number(e))).getTime()))return void console.warn("Invalid date or timestamp in clipboard");s&&("start"===t&&s.setSeconds(s.getSeconds()-1),"end"===t&&s.setSeconds(s.getSeconds()+1),c({HH:s.getHours().toString().padStart(2,"0"),mm:s.getMinutes().toString().padStart(2,"0"),ss:s.getSeconds().toString().padStart(2,"0")}))})}return(0,o.useEffect)(()=>(document.addEventListener("paste",E),()=>document.removeEventListener("paste",E)),[g,h]),(0,n.jsxs)("div",{className:"\n        flex h-7 items-center justify-center\n        gap-0 rounded border border-strong bg-surface-100 text-xs text-foreground-light\n        ".concat(_&&" border-stronger outline outline-2 outline-border","\n        hover:border-stronger transition-colors\n    "),"data-sentry-component":"TimeSplitInput","data-sentry-source-file":"TimeSplitInput.tsx",children:[(0,n.jsx)("div",{className:"mr-1 text-foreground-lighter",children:(0,n.jsx)(a.A,{size:14,strokeWidth:1.5,"data-sentry-element":"Clock","data-sentry-source-file":"TimeSplitInput.tsx"})}),(0,n.jsx)("input",{type:"text",onBlur:()=>b(),onFocus:v,onClick:S,onKeyDown:N,onInput:w,pattern:"[0-23]*",placeholder:"00",onChange:e=>y(e.target.value,"HH"),"aria-label":"Hours",className:l,value:s.HH}),(0,n.jsx)("span",{className:"text-foreground-lighter",children:":"}),(0,n.jsx)("input",{type:"text",onBlur:()=>b(),onFocus:v,onClick:S,onKeyDown:N,onInput:w,pattern:"[0-59]*",placeholder:"00",onChange:e=>y(e.target.value,"mm"),"aria-label":"Minutes",className:l,value:s.mm}),(0,n.jsx)("span",{className:"text-foreground-lighter",children:":"}),(0,n.jsx)("input",{type:"text",onBlur:()=>b(),onFocus:v,onClick:S,onKeyDown:N,onInput:w,pattern:"[0-59]*",placeholder:"00",onChange:e=>y(e.target.value,"ss"),"aria-label":"Seconds",className:l,value:s.ss})]})}}}]);